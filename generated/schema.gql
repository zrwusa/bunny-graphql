# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserSetting {
  id: String!
  userId: String!
  receiveNotifications: Boolean!
  receiveEmails: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Post {
  id: String!
  title: String!
  content: String!
  price: Float
  image: String
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Product {
  id: String!
  brand: String
  name: String!
  price: Float
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type OrderItems {
  quantity: Int!
  price: Float!
  order: Order!
  product: Product!
}

type Order {
  user: User!
  items: [OrderItems!]
  totalAmount: Float!
  status: OrderStatus!
}

enum OrderStatus {
  Pending
  Paid
  AwaitingShipment
  Shipped
  Completed
  Cancelled
  Refunding
  Refunded
  Returning
  Returned
}

type User {
  id: String!
  username: String!
  email: String!
  password: String
  oauthId: String
  provider: String
  createdAt: DateTime!
  updatedAt: DateTime!
  settings: UserSetting
  posts: [Post!]!
  orders: [Order!]!
}

type Query {
  getUserById(id: String!): User
  getUsers: [User!]!
  getProductById(id: String!): Product
  getProducts: [Product!]!
  getPosts: [Post!]!
  orders(filterOrderInput: FilterOrderInput!): [Order!]!
}

input FilterOrderInput {
  page: Float! = 1
  pageSize: Float! = 10
  status: String
  startDate: DateTime
  endDate: DateTime
}

type Mutation {
  createUser(createUserDto: CreateUserDto!): User!
  createUserSettings(createUserSettingsDto: CreateUserSettingsDto!): UserSetting!
  createProduct(createProductDto: CreateProductDto!): Product!
  createPost(createPostDto: CreatePostDto!): Post!
}

input CreateUserDto {
  username: String!
  email: String!
  password: String!
}

input CreateUserSettingsDto {
  userId: String!
  receiveNotifications: Boolean = false
  receiveEmails: Boolean = false
}

input CreateProductDto {
  name: String!
  brand: String!
  price: Float!
  description: String
}

input CreatePostDto {
  userId: String!
  title: String!
  content: String!
  price: Float
  image: String
}